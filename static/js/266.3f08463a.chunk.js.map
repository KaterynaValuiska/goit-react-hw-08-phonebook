{"version":3,"file":"static/js/266.3f08463a.chunk.js","mappings":"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","sources":["components/NewContact.jsx","components/Modal.jsx","components/ItemContact.jsx","pages/Contacts.jsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../redux/contactOperations';\n\nexport default function NewContact() {\n  const contacts = useSelector(state => state.contacts.items);\n  const dispatch = useDispatch();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const nameContact = evt.target.elements.name.value;\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === nameContact.toLowerCase()\n      )\n    ) {\n      alert(`${nameContact} is already in contacts.`);\n      return;\n    }\n\n    dispatch(\n      addContact({\n        name: nameContact,\n        number: evt.target.elements.number.value,\n      })\n    );\n    evt.target.reset();\n  };\n\n  return (\n    <div>\n      <h2>Create a contact</h2>\n\n      <form onSubmit={handleSubmit} className=\"NewContact\">\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\n            Name{' '}\n            <input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              aria-describedby=\"emailHelp\"\n              className=\"form-control\"\n            />\n          </label>\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">\n            Number{' '}\n            <input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              aria-describedby=\"emailHelp\"\n              className=\"form-control\"\n            />\n          </label>\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n}\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modalRoot');\n\nexport const Modal = ({ onClose, children }) => {\n  useEffect(() => {\n    const handleEsc = evt => {\n      if (evt.code === 'Escape') {\n        alert(\n          'Are you sure you have already changed your contact? If so, click on the button \"Change contact\".'\n        );\n      }\n    };\n    window.addEventListener('keydown', handleEsc);\n    return () => {\n      window.removeEventListener('keydown', handleEsc);\n    };\n  }, [onClose]);\n\n  const handleOverlay = evt => {\n    if (evt.currentTarget === evt.target) {\n      alert(\n        'Are you sure you have already changed your contact? If so, click on the button \"Change contact\".'\n      );\n    }\n  };\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleOverlay}>\n      <div className=\"Modal\">{children}</div>\n    </div>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.element.isRequired,\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { updateContact } from 'redux/contactOperations';\n\nexport default function ItemContact({ id, name, number, onClose }) {\n  const contacts = useSelector(state => state.contacts.items);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const nameContact = e.target.elements.name.value;\n    const numberContact = e.target.elements.number.value;\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === nameContact.toLowerCase()\n      )\n    ) {\n      alert(`${nameContact} is already in contacts.`);\n      return;\n    }\n\n    if (contacts.find(contact => contact.number === numberContact)) {\n      alert(`This number: ${numberContact} is already in contacts.`);\n      return;\n    }\n    dispatch(\n      updateContact({\n        contactId: id,\n        name: form.elements.name.value,\n        number: form.elements.number.value,\n      })\n    );\n    onClose();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"ItemContact\">\n      <div className=\"mb-3\">\n        <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\n          Name{' '}\n          <input\n            type=\"text\"\n            name=\"name\"\n            defaultValue={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            aria-describedby=\"emailHelp\"\n            className=\"form-control\"\n          />\n        </label>\n      </div>\n      <div className=\"mb-3\">\n        <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">\n          Number{' '}\n          <input\n            type=\"tel\"\n            name=\"number\"\n            defaultValue={number}\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            aria-describedby=\"emailHelp\"\n            className=\"form-control\"\n          />\n        </label>\n      </div>\n      <button type=\"submit\" className=\"btn btn-primary\">\n        Change contact\n      </button>\n    </form>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts, deleteContact } from '../redux/contactOperations';\nimport { useEffect, useState } from 'react';\nimport NewContact from '../components/NewContact';\nimport { Modal } from 'components/Modal';\nimport ItemContact from 'components/ItemContact';\nimport Loader from 'components/Loader';\n\nfunction Contacts() {\n  const [showModal, setShowModal] = useState(false);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [id, setId] = useState('');\n  const { items, isLoading } = useSelector(state => state.contacts);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const onUpdateContact = ({ id, name, number }) => {\n    toggleModal();\n    setName(name);\n    setNumber(number);\n    setId(id);\n  };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n  return (\n    <div className=\"Contact\">\n      <NewContact />\n      <div>\n        <h2>Your contacts</h2>\n\n        <div>{isLoading && <Loader />}</div>\n        {Array.isArray(items) && items.length <= 0 && (\n          <p> There are no contacts. You can add your contacts. </p>\n        )}\n        <ul className=\"ContactList\">\n          {items.map(({ name, number, id }) => (\n            <li key={id}>\n              {name}: {number}\n              {'  '}\n              <button\n                type=\"button\"\n                className=\"btn btn-primary BtnDelete\"\n                aria-label=\"Close\"\n                onClick={() => onDeleteContact(id)}\n              >\n                delete\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-primary BtnDelete\"\n                aria-label=\"Close\"\n                onClick={() => onUpdateContact({ id, name, number })}\n              >\n                update\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <ItemContact\n            id={id}\n            name={name}\n            number={number}\n            onClose={toggleModal}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nexport default Contacts;\n"],"names":["NewContact","contacts","useSelector","state","items","dispatch","useDispatch","_jsxs","children","_jsx","onSubmit","evt","preventDefault","nameContact","target","elements","name","value","find","contact","toLowerCase","alert","concat","addContact","number","reset","className","htmlFor","type","pattern","title","required","modalRoot","document","querySelector","Modal","_ref","onClose","useEffect","handleEsc","code","window","addEventListener","removeEventListener","createPortal","onClick","currentTarget","ItemContact","id","e","form","numberContact","updateContact","contactId","defaultValue","_useState","useState","_useState2","_slicedToArray","showModal","setShowModal","_useState3","_useState4","setName","_useState5","_useState6","setNumber","_useState7","_useState8","setId","_useSelector","isLoading","fetchContacts","toggleModal","Loader","Array","isArray","length","map","_ref2","deleteContact","onDeleteContact","onUpdateContact"],"sourceRoot":""}